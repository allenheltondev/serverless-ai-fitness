{
  "Comment": "Generates the workout schedules for a given week",
  "StartAt": "Generate Weekly Schedule",
  "States": {
    "Generate Weekly Schedule": {
      "Type": "Task",
      "Resource": "${LambdaInvoke}",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${GenerateWeeklyScheduleFunction}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Process Schedule"
    },
    "Process Schedule": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Save Weekly Schedule",
          "States": {
            "Save Weekly Schedule": {
              "Type": "Task",
              "Resource": "${DynamodbPutItem}",
              "Parameters": {
                "TableName": "${TableName}",
                "Item": {
                  "pk": {
                    "S.$": "$.weekDetail.startOfWeek"
                  },
                  "sk": {
                    "S": "schedule"
                  },
                  "muscleGroups": {
                    "L.$": "$.weekDetail.muscleGroups"
                  }
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Build Daily Workouts",
          "States": {
            "Build Daily Workouts": {
              "Type": "Map",
              "ItemProcessor": {
                "ProcessorConfig": {
                  "Mode": "INLINE"
                },
                "StartAt": "Build Workout",
                "States": {
                  "Build Workout": {
                    "Type": "Task",
                    "Resource": "${LambdaInvoke}",
                    "Parameters": {
                      "FunctionName": "${AskChatGPTFunction}",
                      "Payload": {
                        "conversationKey.$": "States.Format('workout-{}', $.date)",
                        "systemContext": "You are FitGPT, an expert level AI fitness trainer. You create workouts designed for optimal muscle building.",
                        "query.$": "$.request",
                        "rememberResponse": true
                      }
                    },
                    "Retry": [
                      {
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException",
                          "Lambda.TooManyRequestsException"
                        ],
                        "IntervalSeconds": 2,
                        "MaxAttempts": 6,
                        "BackoffRate": 2
                      },
                      {
                        "ErrorEquals": [
                          "RateLimitExceeded"
                        ],
                        "BackoffRate": 2,
                        "IntervalSeconds": 30,
                        "MaxAttempts": 6
                      }
                    ],
                    "Next": "Build Warmup and Closer",
                    "ResultPath": "$.workout",
                    "Catch": [
                      {
                        "ErrorEquals": [
                          "States.ALL"
                        ],
                        "Next": "Unable to Generate Workout"
                      }
                    ]
                  },
                  "Build Warmup and Closer": {
                    "Type": "Parallel",
                    "Next": "Format Workout Data",
                    "Branches": [
                      {
                        "StartAt": "Build Closer and Cooldown",
                        "States": {
                          "Build Closer and Cooldown": {
                            "Type": "Task",
                            "Resource": "${LambdaInvoke}",
                            "Parameters": {
                              "FunctionName": "${AskChatGPTFunction}",
                              "Payload": {
                                "conversationKey.$": "States.Format('workout-{}', $.date)",
                                "query": "Create a closing drop set or similar to bring this muscle group to failure. Then, come up with a creative dynamic ab workout that can optionally use medicine balls to close the workout.",
                                "trimFront": true
                              }
                            },
                            "Retry": [
                              {
                                "ErrorEquals": [
                                  "Lambda.ServiceException",
                                  "Lambda.AWSLambdaException",
                                  "Lambda.SdkClientException",
                                  "Lambda.TooManyRequestsException"
                                ],
                                "IntervalSeconds": 2,
                                "MaxAttempts": 6,
                                "BackoffRate": 2
                              },
                              {
                                "ErrorEquals": [
                                  "RateLimitExceeded"
                                ],
                                "BackoffRate": 2,
                                "IntervalSeconds": 30,
                                "MaxAttempts": 6
                              }
                            ],
                            "End": true,
                            "OutputPath": "$.Payload"
                          }
                        }
                      },
                      {
                        "StartAt": "Build Warmup",
                        "States": {
                          "Build Warmup": {
                            "Type": "Task",
                            "Resource": "${LambdaInvoke}",
                            "Parameters": {
                              "FunctionName": "${AskChatGPTFunction}",
                              "Payload": {
                                "conversationKey.$": "States.Format('workout-{}', $.date)",
                                "query": "Generate a short warmup with calisthenics and bodyweight excercises appropriate for that workout.",
                                "trimResponse": true
                              }
                            },
                            "Retry": [
                              {
                                "ErrorEquals": [
                                  "Lambda.ServiceException",
                                  "Lambda.AWSLambdaException",
                                  "Lambda.SdkClientException",
                                  "Lambda.TooManyRequestsException"
                                ],
                                "IntervalSeconds": 2,
                                "MaxAttempts": 6,
                                "BackoffRate": 2
                              },
                              {
                                "ErrorEquals": [
                                  "RateLimitExceeded"
                                ],
                                "BackoffRate": 2,
                                "IntervalSeconds": 30,
                                "MaxAttempts": 6
                              }
                            ],
                            "End": true,
                            "OutputPath": "$.Payload"
                          }
                        }
                      }
                    ],
                    "ResultPath": "$.additional"
                  },
                  "Format Workout Data": {
                    "Type": "Pass",
                    "Next": "Save Workout",
                    "Parameters": {
                      "date.$": "$.date",
                      "muscleGroup.$": "$.muscleGroup",
                      "workout.$": "$.workout.Payload.response",
                      "warmup.$": "$.additional[1].response",
                      "cooldown.$": "$.additional[0].response"
                    }
                  },
                  "Unable to Generate Workout": {
                    "Type": "Pass",
                    "End": true
                  },
                  "Save Workout": {
                    "Type": "Task",
                    "Resource": "${DynamodbPutItem}",
                    "Parameters": {
                      "TableName": "${TableName}",
                      "Item": {
                        "pk": {
                          "S.$": "$.date"
                        },
                        "sk": {
                          "S": "workout"
                        },
                        "IsScheduledInFuture": {
                          "S": "true"
                        },
                        "ScheduledDate": {
                          "S.$": "$.date"
                        },
                        "muscleGroup": {
                          "S.$": "$.muscleGroup"
                        },
                        "workout": {
                          "S.$": "$.workout"
                        },
                        "warmup": {
                          "S.$": "$.warmup"
                        },
                        "cooldown": {
                          "S.$": "$.cooldown"
                        }
                      }
                    },
                    "End": true
                  }
                }
              },
              "End": true,
              "ItemsPath": "$.requests"
            }
          }
        }
      ],
      "Next": "Send Notification Email",
      "ResultPath": null
    },
    "Send Notification Email": {
      "Type": "Task",
      "Resource": "${EventBridgePutEvents}",
      "Parameters": {
        "Entries": [
          {
            "Detail": {
              "subject.$": "$.weekDetail.email.subject",
              "to": "${AdminEmail}",
              "html.$": "$.weekDetail.email.html"
            },
            "DetailType": "Send Email",
            "Source": "Fitness AI"
          }
        ]
      },
      "End": true
    }
  }
}